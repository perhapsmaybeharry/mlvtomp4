#!/bin/bash

#
# This script converts Magic Lantern RAW Video (MLV) into
# MPEG4 (MP4) video that can be played by most video players.
#
# Simply provide a MLV file name in the arguments. This script
# can process multiple files per instance.
#
# Dependencies: mlv_dump, dcraw, ffmpeg.
#

# MARK: User-Defined Variables

# The codec for ffmpeg to convert to. Default is 'libx264'.
CODEC='prores'

# The framerate at which the MP4 should play at. Default is '24'.
FRAMERATE='24'

# The framesize of the resulting MP4 video. Default is '1824x684'.
# It is recommended you change this to the appropriate size as recorded by the camera.
# FRAMESIZE='1824x684'
# Deprecated: if you want to modify the frame size, add '-s 1824x684', where 1824x684
# is the framesize you wish for. The script now uses the maximum possible size of the
# input images for its output framesize.

# Whether to keep or delete the intemediary DNGs and PPM files. Default is 'true'.
KEEPINTERMEDIARY='false'

# MARK: Check For Dependencies
if [ -z $(which mlv_dump) ]; then
	echo "missing mlv_dump dependency"
	exit 1
elif [ -z $(which dcraw) ]; then
	echo "missing dcraw dependency"
	exit 2
elif [ -z $(which ffmpeg) ]; then
	echo "missing ffmpeg dependency"
	exit 3
fi

# MARK: Trap Declaration
# this function will run just before the script exits
function janitor {	
	echo "cleaning up"
	cd ..
	if [ "$KEEPINTERMEDIARY" == 'false' ]; then rm -r .$$; fi
}
trap janitor SIGSTOP SIGKILL SIGINT

# MARK: Argument Processing
# Check if files were provided
if [ -z "$1" ]; then echo "no files were provided for conversion, please specify at least one MLV file to convert."; exit 4; fi

# Check if all the files provided exist
for file in $@; do if [ ! -f "$file" ]; then echo "$file does not exist"; exit 5; fi; done

if [ -z "$FRAMERATE" ]; then FRAMERATE='24';
elif [ -z "$FRAMESIZE" ]; then FRAMESIZE='1824x684'; fi

# MARK: Main Loop
for file in $@; do

	echo "processing $file"
	
	# Create a temporary directory to house the intermediary files
	mkdir -p ".$$"

	# Check that the previous command succeeded
	if [ $? -ne 0 ]; then echo "could not write files"; continue; fi

	# Enter the temporary directory
	cd .$$

	echo "temporary directory $PWD"

	# Dump all the DNGs from the MLV file into the temporary directory
	echo "dumping DNGs"
	mlv_dump --dng --show-progress -o "" "../$file"

	# Check that the previous command succeeded
	if [ $? -ne 0 ]; then echo "could not dump DNGs"; janitor; continue; fi

	# Convert the DNGs to PPMs using dcraw
	echo "converting DNGs"
	dcraw -v -g 2.222 4.5 *.dng 2>&1 >/dev/null | grep 'ppm'

	# Check that the previous command succeeded
	if [ $? -ne 0 ]; then echo "could not convert DNGs"; janitor; continue; fi
	
	# FFMpeg the files together into one nice video
	echo "stitching into MP4"	
	ffmpeg -r "$FRAMERATE" -start_number 000 -i '%*.ppm' -vf scale="iw:trunc(ow/a/2)*2" -vcodec $CODEC -crf 16 -pix_fmt yuv420p ../$(echo $file | cut -f1 -d'.').mp4

	# Check that the previous command succeeded (this one doesn't have janitor just in case you want to reencode again manually without having to wait so long)
	if [ $? -ne 0 ]; then echo "could not stitch into MP4"; continue; fi

	# Clean up
	janitor

done

echo "done"
